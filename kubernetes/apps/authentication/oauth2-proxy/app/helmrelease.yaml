apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: oauth2-proxy
  namespace: authentication
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.7.1
            env:
              OAUTH2_PROXY_PROVIDER: "oidc"
              OAUTH2_PROXY_USER_ID_CLAIM: "sub"
              OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: "ZITADEL"
              OAUTH2_PROXY_REDIRECT_URL: "https://oauth2-proxy.internal.immich.cloud/oauth2/callback"
              OAUTH2_PROXY_OIDC_ISSUER_URL: "https://zitadel.internal.immich.cloud"
              OAUTH2_PROXY_EMAIL_DOMAINS: "*"
              OAUTH2_PROXY_COOKIE_DOMAINS: ".immich.cloud"
              OAUTH2_PROXY_WHITELIST_DOMAINS: ".immich.cloud"
              OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
              OAUTH2_PROXY_CLIENT_SECRET: "unused"
              OAUTH2_PROXY_CODE_CHALLENGE_METHOD: "S256"
              OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
              OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
              OAUTH2_PROXY_REVERSE_PROXY: "true"
              OAUTH2_PROXY_UPSTREAMS: "static://202"
            envFrom:
              - secretRef:
                  name: oauth2-proxy-oauth-client
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 4180
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 4180
    service:
      main:
        ports:
          http:
            port: 4180
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &host oauth2-proxy.internal.immich.cloud
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: oauth2-proxy-tls
