apiVersion: fluxcd.controlplane.io/v1
kind: ResourceSet
metadata:
  name: immich-github-prs
  namespace: preview
spec:
  inputsFrom:
    - apiVersion: fluxcd.controlplane.io/v1
      kind: ResourceSetInputProvider
      name: immich-github-prs
  resources:
    - apiVersion: postgresql.cnpg.io/v1
      kind: Cluster
      metadata:
        name: pr-<< inputs.id >>-preview-database
        namespace: preview
      spec:
        instances: 1
        imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:14.12-v0.3.0
        enableSuperuserAccess: true
        bootstrap:
          recovery:
            backup:
              name: preview-base-database-snapshot
        postgresql:
          shared_preload_libraries:
            - "vectors.so"
        storage:
          size: 10Gi
          storageClass: zfs
        backup:
          volumeSnapshot:
            className: zfs

    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: pr-<< inputs.id >>-preview-library
        namespace: preview
      spec:
        dataSource:
          name: preview-base-library-snapshot
          kind: VolumeSnapshot
          apiGroup: snapshot.storage.k8s.io
        storageClassName: zfs
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi

    - apiVersion: helm.toolkit.fluxcd.io/v2
      kind: HelmRelease
      metadata:
        name: pr-<< inputs.id >>-preview
        namespace: preview
      spec:
        interval: 5m
        chart:
          spec:
            chart: immich
            version: 0.9.0
            sourceRef:
              kind: HelmRepository
              name: immich-charts
              namespace: flux-system
            interval: 1m
        upgrade:
          remediation:
            retries: 3
        values:
          podLabels:
            podbump.bo0tzz.me/enabled: 'true'
          postgres:
            enabled: false
          redis:
            enabled: true
          immich:
            persistence:
              library:
                existingClaim: pr-<< inputs.id >>-preview-library
          env:
            DB_HOSTNAME:
              valueFrom:
                secretKeyRef:
                  name: pr-<< inputs.id >>-preview-database-superuser
                  key: host
            DB_USERNAME:
              valueFrom:
                secretKeyRef:
                  name: pr-<< inputs.id >>-preview-database-superuser
                  key: user
            DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: pr-<< inputs.id >>-preview-database-superuser
                  key: password
            DB_DATABASE_NAME:
              valueFrom:
                secretKeyRef:
                  name: pr-<< inputs.id >>-preview-database-app
                  key: dbname
            LOG_LEVEL: verbose
          image:
            tag: pr-<< inputs.id >>
          server:
            image:
              pullPolicy: Always
            ingress:
              main:
                enabled: true
                className: nginx
                annotations:
                  # TODO: LE prod
                  cert-manager.io/cluster-issuer: letsencrypt-staging
                  nginx.ingress.kubernetes.io/proxy-body-size: "0"
                hosts:
                  - host: pr-<< inputs.id >>-preview.internal.immich.cloud
                    paths:
                      - path: /
                        pathType: Prefix
                tls:
                  - hosts:
                      - pr-<< inputs.id >>-preview.internal.immich.cloud
                    secretName: immich-main-tls
          machine-learning:
            image:
              pullPolicy: Always

