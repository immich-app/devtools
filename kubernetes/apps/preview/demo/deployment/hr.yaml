apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: demo
  namespace: preview
spec:
  interval: 5m
  chart:
    spec:
      chart: immich
      # renovate: datasource=github-releases depName=immich-app/immich-charts
      version: "0.9.3"
      sourceRef:
        kind: HelmRepository
        name: immich-charts
        namespace: flux-system
      interval: 1m
  values:
    postgres:
      enabled: false
    redis:
      enabled: true
      master:
        persistence:
          enabled: false
    immich:
      persistence:
        library:
          existingClaim: ignored
    env:
      DB_HOSTNAME:
        valueFrom:
          secretKeyRef:
            name: demo-database-superuser
            key: host
      DB_USERNAME:
        valueFrom:
          secretKeyRef:
            name: demo-database-superuser
            key: user
      DB_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: demo-database-superuser
            key: password
      DB_DATABASE_NAME:
        valueFrom:
          secretKeyRef:
            name: demo-database-app
            key: dbname
      LOG_LEVEL: verbose
    image:
      tag: release
    server:
      image:
        pullPolicy: Always
      persistence:
        library:
          type: custom
          volumeSpec:
            ephemeral: # This way, the volume restores from snapshot every time the pod is recreated
              volumeClaimTemplate:
                spec:
                  dataSource:
                    name: demo-library-snapshot
                    kind: VolumeSnapshot
                    apiGroup: snapshot.storage.k8s.io
                  storageClassName: zfs
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 100Gi
      ingress:
        main:
          enabled: true
          className: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers 'Access-Control-Allow-Origin: *';
              more_set_headers 'Access-Control-Allow-Credentials: false';
              more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, PATCH, DELETE';
              more_set_headers 'Access-Control-Allow-Headers: x-session-token, x-api-key, Authorization, Content-Type';
              
              if ($request_method = 'OPTIONS') {
                  more_set_headers 'Access-Control-Max-Age: 3600';
                  more_set_headers 'Content-Type: text/plain charset=UTF-8';
                  more_set_headers 'Content-Length: 0';
                  return 204;
              }
              
              if ($request_method = PUT) {
                set $block_put 1;
              }
                if ($uri ~ ^/api/(system-config|users/me|admin/users/.*|users/profile-image|assets/.*/original|auth/change-password)$) {
                set $block_put "${block_put}1";
              }
                if ($block_put = 11) {
                return 403;
              }

              if ($request_method = POST) {
                set $block_post 1;
              }
                if ($uri ~ ^/api/(system-config|users/me|admin/users/.*|users/profile-image|assets|auth/change-password|notifications/test-email|libraries|trash/empty)$) {
                set $block_post "${block_post}1";
              }
                if ($block_post = 11) {
                return 403;
              }

              add_header 'Vary' 'Origin' always;
          hosts:
            - host: demo.immich.app
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - demo.immich.app
              secretName: demo-tls
    machine-learning:
      image:
        pullPolicy: Always
