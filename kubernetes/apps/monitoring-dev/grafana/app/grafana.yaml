apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  namespace: monitoring-dev
  labels:
    dashboards: "grafana"
spec:
  config:
    server:
      root_url: https://monitoring.dev.immich.cloud/
    auth.generic_oauth:
      enabled: "true"
      client_id: ${GRAFANA_OAUTH_CLIENT_ID}
      client_secret: ''
      scopes: openid email profile groups offline_access
      auth_url: https://zitadel.internal.immich.cloud/oauth/v2/authorize
      token_url: https://zitadel.internal.immich.cloud/oauth/v2/token
      api_url: https://zitadel.internal.immich.cloud/oidc/v1/userinfo
      # best I can tell grafana defaults to grabbing the role from the oauth userinfo, so no need for explicit role_attribute_path
      # TODO: zitadel should map to 'GrafanaAdmin' || 'Viewer'
      allow_assign_grafana_admin: "true"
      auto_login: "true"
    users:
      viewers_can_edit: "true"
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
  deployment:
    spec:
      template:
        metadata:
          labels:
            dashboards: grafana
        spec:
          securityContext:
            fsGroup: 472
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
  ingress:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
    spec:
      ingressClassName: nginx
      rules:
        - host: &host monitoring.dev.immich.cloud
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: grafana-tls-secret
